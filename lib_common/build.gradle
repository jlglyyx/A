apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation"  : "$projectDir/schemas".toString(),
                             "room.incremental"     : "true",
                             "room.expandProjection": "true",
                             "AROUTER_MODULE_NAME"    : project.getName()]
                includeCompileClasspath = false
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
        debug{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api fileTree(dir: "libs", include: ["*.jar"])
    api rootProject.ext.androidx['kotlin-stdlib']
    api rootProject.ext.androidx['appcompat']
    api rootProject.ext.androidx['kotlin_core']
    api rootProject.ext.androidx['constraintlayout']
    api rootProject.ext.androidx['junit']
    api rootProject.ext.androidx['espresso-core']
    api rootProject.ext.androidx['recyclerview']
    api rootProject.ext.dependencies['BaseRecyclerViewAdapterHelper']
    api rootProject.ext.dependencies['dagger']
    compileOnly rootProject.ext.dependencies['dagger-compiler']
    api rootProject.ext.dependencies['retrofit2']
    api rootProject.ext.dependencies['converter-gson']
    api rootProject.ext.dependencies['converter-scalars']
    api rootProject.ext.dependencies['adapter-rxjava']
    api rootProject.ext.dependencies['logging-interceptor']
    api rootProject.ext.dependencies['lifecycle-viewmodel-ktx']
    api rootProject.ext.dependencies['lifecycle-livedata-ktx']
    api rootProject.ext.dependencies['lifecycle-viewmodel-compose']
    api rootProject.ext.dependencies['startup-runtime']
    api rootProject.ext.dependencies['avi']
    api rootProject.ext.dependencies['arouter-api']
    kapt rootProject.ext.dependencies['arouter-compiler']
    api rootProject.ext.dependencies['material']
    api rootProject.ext.dependencies['GSYVideoPlayer']
    api rootProject.ext.dependencies['rxbinding']
    api rootProject.ext.dependencies['rxpermissions']
    api rootProject.ext.dependencies['mmkv']
    api rootProject.ext.dependencies['room-runtime']
    api rootProject.ext.dependencies['room-ktx']
    kapt rootProject.ext.dependencies['room-compiler']
    api rootProject.ext.dependencies['huawei-scanplus']
    debugImplementation rootProject.ext.dependencies['leakcanary-android']
    api rootProject.ext.dependencies['bugly']
    api rootProject.ext.dependencies['refresh-layout-kernel']
    api rootProject.ext.dependencies['refresh-header-classics']
    api rootProject.ext.dependencies['refresh-header-material']
    api rootProject.ext.dependencies['refresh-header-two-level']
    api rootProject.ext.dependencies['refresh-footer-classics']
    api rootProject.ext.dependencies['glide']
    kapt rootProject.ext.dependencies['glide-compiler']
    api rootProject.ext.dependencies['banner']
    api rootProject.ext.dependencies['photoview']
    api rootProject.ext.dependencies['XPopup']
    api rootProject.ext.dependencies['location']
    testImplementation rootProject.ext.dependencies['core-testing']

}